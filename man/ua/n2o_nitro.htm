<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="" />
    <meta name="author" content="Maxim Sokhatsky" />
    <title>NITRO</title>
    <link rel="stylesheet" href="https://synrc.space/synrc.css" />
</head>

<body>

<nav>
    <a href='https://n2o.dev'>DEV</a>
    <a href='https://ws.n2o.space'>N2O</a>
    <a href='#' style="background:#ededed;">NITRO</a>
</nav>

<header>
    <a href="../index.html"><img src="https://n2o.space/img/Synrc Neo.svg"></a>
    <h1>NITRO</h1>
</header>

<main>
    <section>


<h3>ВСТУП</h3>

<p>Модуль <a href="https://github.com/synrc/n2o/blob/master/src/protocols/n2o_nitro.erl">n2o_nitro</a>
   надає специфікацію протоколу <a href="http://nitrogenproject.com/demos">Nitrogen Web Framework</a>
   та імплементацію.</p>

    </section>
    <section>
        <h3>INIT</h3>
        <p>Повідомлення init викликає функцію event(init) модуля сторінки.
           Існує два способи подати бінарне повідомлення INIT.
           Перший спосіб — закодований в BERT #init record з бінарним токеном,
           який, зазвичай, створюється n2o_session, передається в #io record
           як параметр даних та зберігається на клієнті в localStorage чи Key Chain.
           Клієнти з недійсними токенами реєструються та отримують нові токени.</p>
        <figure><code>
 -record(init, { token :: binary() }).
        </code></figure>
        <p>Другий спосіб —  TEXT версія повідомлення, &lt;&lt;"N2O,"&gt;&gt;
           що зазвичай працює для хостів зі здатністю до бінарної передачі, таких, як WebSockets.
           </p>
        <figure><code>
 <<"N2O,",Token/binary>>
        </code></figure>
        <p>Щоб детальніше дізнатись про протокол видачі токенів дивіться модуль <a href="n2o_session.htm">n2o_session</a>.</p>
    </section>
    <section>
        <h3>PICKLE</h3>
        <p>Повідомлення pickle надсилає на сервер заздалегідь підготовлене (за допомогою сервера) зашифроване повідомлення.
           Такі повідомлення містять #ev record з інформацією викликача (зашифровані).
           Зашифровані повідомлення можуть подовжувати термін придатності токена сесії
           за допомогою оновлення токена клієнта при кожному UI запиті (відстеження активності користувачів),
           у випадку, коли змінна <b>nitro_prolongate</b> додатку n2o дорівнює <b>true</b>.</p>
        <div>
        <figure><code>
 -record(pickle, { source  = [] :: [] | binary(),
                   pickled = [] :: [] | binary(),
                   args    = [] :: list({atom(),any()}) }).

 -record(ev,     { module  = [] :: [] | atom(),
                   msg     = [] :: any(),
                   trigger = [] :: [] | binary(),
                   name    = [] :: [] | binary() }).
        </code></figure>
        </div>
    </section>
    <section>
        <h3>DIRECT</h3>
        <p>Повідомлення direct надсилає дані без задіяння механізмів діалогу, сесії чи шифрування.</p>
        <div>
        <figure><code>
 -record(direct, { data = [] :: any() }).
        </code></figure>
        </div>
    </section>
    <section>
        <h3>FLUSH</h3>
        <p>Повідомлення flush лише перенаправляє дані в сокет.</p>
        <div>
        <figure><code>
 -record(flush, { data = [] :: [] | list(#action{}) }).

        </code></figure>
        </div>
    </section>
    <section>

<p>Можливо, Ви також бажаєте почитати про:
<b>
<a href="n2o_heart.htm">n2o_heart</a>,
<a href="n2o_ftp.htm">n2o_ftp</a>
</b>.
</p>

    </section>
</main>

<footer>
    2005&mdash;2019 &copy; Synrc Research Center
</footer>

</body>
</html>
